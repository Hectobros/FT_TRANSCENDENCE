/* tslint:disable */
/* eslint-disable */
/**
 * ft_transcendance API
 * ft_transcendance API
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorOutput,
  OauthAuthenticationRequest,
  OauthToken,
  RefreshTokenRequest,
} from '../models';
import {
    ErrorOutputFromJSON,
    ErrorOutputToJSON,
    OauthAuthenticationRequestFromJSON,
    OauthAuthenticationRequestToJSON,
    OauthTokenFromJSON,
    OauthTokenToJSON,
    RefreshTokenRequestFromJSON,
    RefreshTokenRequestToJSON,
} from '../models';

export interface OauthAuthenticationOperationRequest {
    oauthAuthenticationRequest?: OauthAuthenticationRequest;
}

export interface RefreshTokenOperationRequest {
    refreshTokenRequest?: RefreshTokenRequest;
}

/**
 * 
 */
export class AuthenticationApi extends runtime.BaseAPI {

    /**
     * Resolve oauth authentication code flow
     * Oauth authentication code flow
     */
    async oauthAuthenticationRaw(requestParameters: OauthAuthenticationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OauthToken>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/auth/callback`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: OauthAuthenticationRequestToJSON(requestParameters.oauthAuthenticationRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OauthTokenFromJSON(jsonValue));
    }

    /**
     * Resolve oauth authentication code flow
     * Oauth authentication code flow
     */
    async oauthAuthentication(requestParameters: OauthAuthenticationOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OauthToken> {
        const response = await this.oauthAuthenticationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Allow you to get a new access and refresh token from your refresh token
     * Get new tokens
     */
    async refreshTokenRaw(requestParameters: RefreshTokenOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OauthToken>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/auth/token`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RefreshTokenRequestToJSON(requestParameters.refreshTokenRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OauthTokenFromJSON(jsonValue));
    }

    /**
     * Allow you to get a new access and refresh token from your refresh token
     * Get new tokens
     */
    async refreshToken(requestParameters: RefreshTokenOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OauthToken> {
        const response = await this.refreshTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
